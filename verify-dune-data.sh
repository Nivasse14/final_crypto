#!/bin/bash

# Script de v√©rification des donn√©es Dune dans la base de donn√©es
# V√©rifie la coh√©rence entre le scraping et le stockage

SUPABASE_URL="https://xkndddxqqlxqknbqtefv.supabase.co"
SUPABASE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhrbmRkZHhxcWx4cWtuYnF0ZWZ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwMTY3MTEsImV4cCI6MjA2ODU5MjcxMX0.1JfLmuXhKZLhSpIVkoubfaaE9M1jAANoPjKcXZTgPgU"

echo "üîç V√©rification des donn√©es Dune dans la base de donn√©es"
echo "======================================================"

# 1. Statistiques g√©n√©rales
echo ""
echo "üìä 1. STATISTIQUES G√âN√âRALES"
TOTAL_WALLETS=$(curl -s "$SUPABASE_URL/rest/v1/wallet_registry?select=count" \
  -H "apikey: $SUPABASE_KEY" \
  -H "Authorization: Bearer $SUPABASE_KEY" | jq -r '.[0].count')

DUNE_WALLETS=$(curl -s "$SUPABASE_URL/rest/v1/wallet_registry?select=count&source=eq.dune_scraper" \
  -H "apikey: $SUPABASE_KEY" \
  -H "Authorization: Bearer $SUPABASE_KEY" | jq -r '.[0].count')

echo "   üìà Total wallets en base: $TOTAL_WALLETS"
echo "   üï∑Ô∏è Wallets de Dune: $DUNE_WALLETS"
echo "   üìä Pourcentage Dune: $(echo "scale=1; $DUNE_WALLETS * 100 / $TOTAL_WALLETS" | bc)%"

# 2. V√©rification du fichier JSON local
echo ""
echo "üìÅ 2. COMPARAISON AVEC LE FICHIER LOCAL"
if [ -f "scripts/wallets.json" ]; then
  JSON_COUNT=$(jq '. | length' scripts/wallets.json)
  echo "   üìÑ Wallets dans wallets.json: $JSON_COUNT"
  
  if [ "$JSON_COUNT" -eq "$DUNE_WALLETS" ]; then
    echo "   ‚úÖ Correspondance parfaite!"
  else
    echo "   ‚ö†Ô∏è Diff√©rence d√©tect√©e: JSON=$JSON_COUNT vs DB=$DUNE_WALLETS"
  fi
else
  echo "   ‚ùå Fichier wallets.json non trouv√©"
fi

# 3. Donn√©es r√©centes
echo ""
echo "‚è∞ 3. DONN√âES R√âCENTES (derni√®res 24h)"
YESTERDAY=$(date -u -d "1 day ago" +%Y-%m-%dT%H:%M:%S)
RECENT_DUNE=$(curl -s "$SUPABASE_URL/rest/v1/wallet_registry?select=count&source=eq.dune_scraper&updated_at=gte.$YESTERDAY" \
  -H "apikey: $SUPABASE_KEY" \
  -H "Authorization: Bearer $SUPABASE_KEY" | jq -r '.[0].count')

echo "   üÜï Wallets Dune mis √† jour dans les 24h: $RECENT_DUNE"

# 4. √âchantillon de donn√©es
echo ""
echo "üëÅÔ∏è 4. √âCHANTILLON DE DONN√âES DUNE"
echo "   (5 derniers wallets Dune mis √† jour)"

curl -s "$SUPABASE_URL/rest/v1/wallet_registry?select=wallet_address,total_pnl_usd,roi,updated_at&source=eq.dune_scraper&order=updated_at.desc&limit=5" \
  -H "apikey: $SUPABASE_KEY" \
  -H "Authorization: Bearer $SUPABASE_KEY" | \
  jq -r '.[] | "   üî∏ " + .wallet_address[0:20] + "... | PnL: $" + (.total_pnl_usd | tostring) + " | ROI: " + (.roi | tostring) + "% | " + .updated_at[0:16]'

# 5. R√©partition par statut d'enrichissement
echo ""
echo "üîÑ 5. STATUT D'ENRICHISSEMENT (wallets Dune)"

ENRICHED_DUNE=$(curl -s "$SUPABASE_URL/rest/v1/wallet_registry?select=count&source=eq.dune_scraper&status=eq.enriched" \
  -H "apikey: $SUPABASE_KEY" \
  -H "Authorization: Bearer $SUPABASE_KEY" | jq -r '.[0].count')

PENDING_DUNE=$(curl -s "$SUPABASE_URL/rest/v1/wallet_registry?select=count&source=eq.dune_scraper&or=(status.is.null,status.neq.enriched)" \
  -H "apikey: $SUPABASE_KEY" \
  -H "Authorization: Bearer $SUPABASE_KEY" | jq -r '.[0].count')

echo "   ‚úÖ Enrichis: $ENRICHED_DUNE"
echo "   ‚è≥ En attente: $PENDING_DUNE"
echo "   üìä Taux enrichissement: $(echo "scale=1; $ENRICHED_DUNE * 100 / $DUNE_WALLETS" | bc)%"

# 6. M√©tadonn√©es Dune
echo ""
echo "üè∑Ô∏è 6. M√âTADONN√âES DUNE"
echo "   (V√©rification que les donn√©es originales sont pr√©serv√©es)"

HAS_METADATA=$(curl -s "$SUPABASE_URL/rest/v1/wallet_registry?select=count&source=eq.dune_scraper&metadata=not.is.null" \
  -H "apikey: $SUPABASE_KEY" \
  -H "Authorization: Bearer $SUPABASE_KEY" | jq -r '.[0].count')

echo "   üì¶ Wallets avec m√©tadonn√©es: $HAS_METADATA"
if [ "$HAS_METADATA" -eq "$DUNE_WALLETS" ]; then
  echo "   ‚úÖ Toutes les m√©tadonn√©es sont pr√©serv√©es"
else
  echo "   ‚ö†Ô∏è M√©tadonn√©es manquantes: $((DUNE_WALLETS - HAS_METADATA)) wallets"
fi

# 7. Liens directs pour explorer
echo ""
echo "üîó 7. LIENS POUR EXPLORER LES DONN√âES"
echo "   üìä Dashboard Supabase: https://supabase.com/dashboard/project/xkndddxqqlxqknbqtefv/editor/28888"
echo "   üîç API directe (tous les wallets Dune):"
echo "     curl \"$SUPABASE_URL/rest/v1/wallet_registry?source=eq.dune_scraper&limit=10\" \\"
echo "       -H \"apikey: $SUPABASE_KEY\""

# 8. R√©sum√© final
echo ""
echo "üìã 8. R√âSUM√â DE V√âRIFICATION"
if [ "$DUNE_WALLETS" -gt 0 ]; then
  echo "   ‚úÖ Les wallets Dune SONT pr√©sents en base de donn√©es"
  echo "   ‚úÖ $DUNE_WALLETS wallets de source 'dune_scraper' d√©tect√©s"
  echo "   ‚úÖ Donn√©es fra√Æches avec $RECENT_DUNE mises √† jour r√©centes"
  
  if [ "$PENDING_DUNE" -gt 0 ]; then
    echo "   üîÑ $PENDING_DUNE wallets en attente d'enrichissement"
    echo "   üí° Lancez: ./simple-dune.sh enrich $PENDING_DUNE"
  fi
else
  echo "   ‚ùå AUCUN wallet Dune trouv√© en base!"
  echo "   üí° Lancez: ./simple-dune.sh scraping"
fi

echo ""
echo "‚úÖ V√©rification termin√©e!"
